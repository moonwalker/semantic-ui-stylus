/*!
 * # Semantic UI - Form
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

/*******************************
            Theme
*******************************/

$ui_type    = 'collection';
$ui_element = 'form';

@import '../../theme.config';

/*******************************
            Elements
*******************************/

/*--------------------
        Form
---------------------*/

.ui.form {
  position: relative;
  max-width: 100%;
}

/*--------------------
        Content
---------------------*/

.ui.form > p {
  margin: $ui_paragraphMargin;
}

/*--------------------
        Field
---------------------*/

.ui.form .field {
  clear: both;
  margin: $ui_fieldMargin;
}

.ui.form .field:last-child,
.ui.form .fields:last-child .field {
  margin-bottom: 0em;
}

.ui.form .fields .field {
  clear: both;
  margin: 0em;
}


/*--------------------
        Labels
---------------------*/

.ui.form .field > label {
  display: block;
  margin: $ui_labelMargin;
  color: $ui_labelColor;
  font-size: $ui_labelFontSize;
  font-weight: $ui_labelFontWeight;
  text-transform: $ui_labelTextTransform;
}

/*--------------------
    Standard Inputs
---------------------*/


.ui.form textarea,
.ui.form input:not([type]),
.ui.form input[type="date"],
.ui.form input[type="datetime-local"],
.ui.form input[type="email"],
.ui.form input[type="number"],
.ui.form input[type="password"],
.ui.form input[type="search"],
.ui.form input[type="tel"],
.ui.form input[type="time"],
.ui.form input[type="text"],
.ui.form input[type="file"],
.ui.form input[type="url"] {
  width: $ui_inputWidth;
  vertical-align: top;
}

/* Set max height on unusual input */
.ui.form ::-webkit-datetime-edit,
.ui.form ::-webkit-inner-spin-button {
  height: $ui_inputLineHeight;
}

.ui.form input:not([type]),
.ui.form input[type="date"],
.ui.form input[type="datetime-local"],
.ui.form input[type="email"],
.ui.form input[type="number"],
.ui.form input[type="password"],
.ui.form input[type="search"],
.ui.form input[type="tel"],
.ui.form input[type="time"],
.ui.form input[type="text"],
.ui.form input[type="file"],
.ui.form input[type="url"] {
  font-family: $ui_inputFont;
  margin: 0em;
  outline: none;
  -webkit-appearance: none;
  tap-highlight-color:  rgba(255, 255, 255, 0);

  line-height: $ui_inputLineHeight;
  padding: $ui_inputPadding;
  font-size: $ui_inputFontSize;

  background: $ui_inputBackground;
  border: $ui_inputBorder;
  color: $ui_inputColor;
  border-radius: $ui_inputBorderRadius;
  box-shadow: $ui_inputBoxShadow;
  transition: $ui_inputTransition;
}

/* Text Area */
.ui.form textarea {
  margin: 0em;
  -webkit-appearance: none;
  tap-highlight-color:  rgba(255, 255, 255, 0);

  padding: $ui_textAreaPadding;
  font-size: $ui_textAreaFontSize;
  background: $ui_textAreaBackground;
  border: $ui_textAreaBorder;
  outline: none;
  color: $ui_inputColor;
  border-radius: $ui_inputBorderRadius;
  box-shadow: $ui_inputBoxShadow;
  transition: $ui_textAreaTransition;
  font-size: $ui_textAreaFontSize;
  line-height: $ui_textAreaLineHeight;
  resize: $ui_textAreaResize;
}
.ui.form textarea:not([rows]) {
  height: $ui_textAreaHeight;
  min-height: $ui_textAreaMinHeight;
  max-height: $ui_textAreaMaxHeight;
}

.ui.form textarea,
.ui.form input[type="checkbox"] {
  vertical-align: $ui_checkboxVerticalAlign;
}

/*--------------------------
  Input w/ attached Button
---------------------------*/

.ui.form input.attached {
  width: auto;
}


/*--------------------
     Basic Select
---------------------*/

.ui.form select {
  display: block;
  height: auto;
  width: 100%;
  background: $ui_selectBackground;
  border: $ui_selectBorder;
  border-radius: $ui_selectBorderRadius;
  box-shadow: $ui_selectBoxShadow;
  padding: $ui_selectPadding;
  color: $ui_selectColor;
  transition: $ui_selectTransition;
}

/*--------------------
       Dropdown
---------------------*/

/* Block */
.ui.form .field > .selection.dropdown {
  width: 100%;
}
.ui.form .field > .selection.dropdown > .dropdown.icon {
  float: right;
}

/* Inline */
.ui.form .inline.fields .field > .selection.dropdown,
.ui.form .inline.field > .selection.dropdown {
  width: auto;
}
.ui.form .inline.fields .field > .selection.dropdown > .dropdown.icon,
.ui.form .inline.field > .selection.dropdown > .dropdown.icon {
  float: none;
}

/*--------------------
       UI Input
---------------------*/

/* Block */
.ui.form .field .ui.input,
.ui.form .fields .field .ui.input,
.ui.form .wide.field .ui.input {
  width: 100%;
}

/* Inline  */
.ui.form .inline.fields .field:not(.wide) .ui.input,
.ui.form .inline.field:not(.wide) .ui.input {
  width: auto;
  vertical-align: middle;
}

/* Auto Input */
.ui.form .fields .field .ui.input input,
.ui.form .field .ui.input input {
  width: auto;
}

/* Full Width Input */
.ui.form .ten.fields .ui.input input,
.ui.form .nine.fields .ui.input input,
.ui.form .eight.fields .ui.input input,
.ui.form .seven.fields .ui.input input,
.ui.form .six.fields .ui.input input,
.ui.form .five.fields .ui.input input,
.ui.form .four.fields .ui.input input,
.ui.form .three.fields .ui.input input,
.ui.form .two.fields .ui.input input,
.ui.form .wide.field .ui.input input {
  flex: 1 0 auto;
  width: 0px;
}


/*--------------------
   Types of Messages
---------------------*/

.ui.form .success.message,
.ui.form .warning.message,
.ui.form .error.message {
  display: none;
}

/* Assumptions */
.ui.form .message:first-child {
  margin-top: 0px;
}

/*--------------------
   Validation Prompt
---------------------*/

.ui.form .field .prompt.label {
  white-space: normal;
  background: $ui_promptBackground !important;
  border: $ui_promptBorder !important;
  color: $ui_promptTextColor !important;
}
.ui.form .inline.fields .field .prompt,
.ui.form .inline.field .prompt {
  vertical-align: top;
  margin: $ui_inlinePromptMargin;
}
.ui.form .inline.fields .field .prompt:before,
.ui.form .inline.field .prompt:before {
  border-width: 0px 0px $ui_inlinePromptBorderWidth $ui_inlinePromptBorderWidth;
  bottom: auto;
  right: auto;
  top: 50%;
  left: 0em;
}


/*******************************
            States
*******************************/

/*--------------------
      Autofilled
---------------------*/

.ui.form .field.field input:-webkit-autofill {
  box-shadow: 0px 0px 0px 100px $ui_inputAutoFillBackground inset !important;
  border-color: $ui_inputAutoFillBorder !important;
}

/* Focus */
.ui.form .field.field input:-webkit-autofill:focus {
  box-shadow: 0px 0px 0px 100px $ui_inputAutoFillFocusBackground inset !important;
  border-color: $ui_inputAutoFillFocusBorder !important;
}

/* Error */
.ui.form .error.error input:-webkit-autofill {
  box-shadow: 0px 0px 0px 100px $ui_inputAutoFillErrorBackground inset !important;
  border-color: $ui_inputAutoFillErrorBorder !important;
}



/*--------------------
      Placeholder
---------------------*/

/* browsers require these rules separate */
.ui.form ::-webkit-input-placeholder {
  color: $ui_inputPlaceholderColor;
}
.ui.form :-ms-input-placeholder {
  color: $ui_inputPlaceholderColor;
}
.ui.form ::-moz-placeholder {
  color: $ui_inputPlaceholderColor;
}

.ui.form :focus::-webkit-input-placeholder {
  color: $ui_inputPlaceholderFocusColor;
}
.ui.form :focus:-ms-input-placeholder {
  color: $ui_inputPlaceholderFocusColor;
}
.ui.form :focus::-moz-placeholder {
  color: $ui_inputPlaceholderFocusColor;
}

/* Error Placeholder */
.ui.form .error ::-webkit-input-placeholder {
  color: $ui_inputErrorPlaceholderColor;
}
.ui.form .error :-ms-input-placeholder {
  color: $ui_inputErrorPlaceholderColor !important;
}
.ui.form .error ::-moz-placeholder {
  color: $ui_inputErrorPlaceholderColor;
}

.ui.form .error :focus::-webkit-input-placeholder {
  color: $ui_inputErrorPlaceholderFocusColor;
}
.ui.form .error :focus:-ms-input-placeholder {
  color: $ui_inputErrorPlaceholderFocusColor !important;
}
.ui.form .error :focus::-moz-placeholder {
  color: $ui_inputErrorPlaceholderFocusColor;
}


/*--------------------
        Focus
---------------------*/

.ui.form input:not([type]):focus,
.ui.form input[type="date"]:focus,
.ui.form input[type="datetime-local"]:focus,
.ui.form input[type="email"]:focus,
.ui.form input[type="number"]:focus,
.ui.form input[type="password"]:focus,
.ui.form input[type="search"]:focus,
.ui.form input[type="tel"]:focus,
.ui.form input[type="time"]:focus,
.ui.form input[type="text"]:focus,
.ui.form input[type="file"]:focus,
.ui.form input[type="url"]:focus {
  color: $ui_inputFocusColor;
  border-color: $ui_inputFocusBorderColor;
  border-radius: $ui_inputFocusBorderRadius;
  background: $ui_inputFocusBackground;
  box-shadow: $ui_inputFocusBoxShadow;
}
.ui.form textarea:focus {
  color: $ui_textAreaFocusColor;
  border-color: $ui_textAreaFocusBorderColor;
  border-radius: $ui_textAreaFocusBorderRadius;
  background: $ui_textAreaFocusBackground;
  box-shadow: $ui_textAreaFocusBoxShadow;
  -webkit-appearance: none;
}


/*--------------------
        Success
---------------------*/

/* On Form */
.ui.form.success .success.message:not(:empty) {
  display: block;
}
.ui.form.success .compact.success.message:not(:empty) {
  display: inline-block;
}
.ui.form.success .icon.success.message:not(:empty) {
  display: flex;
}

/*--------------------
        Warning
---------------------*/

/* On Form */
.ui.form.warning .warning.message:not(:empty) {
  display: block;
}
.ui.form.warning .compact.warning.message:not(:empty) {
  display: inline-block;
}
.ui.form.warning .icon.warning.message:not(:empty) {
  display: flex;
}

/*--------------------
        Error
---------------------*/

/* On Form */
.ui.form.error .error.message:not(:empty) {
  display: block;
}
.ui.form.error .compact.error.message:not(:empty) {
  display: inline-block;
}
.ui.form.error .icon.error.message:not(:empty) {
  display: flex;
}

/* On Field(s) */
.ui.form .fields.error .field label,
.ui.form .field.error label,
.ui.form .fields.error .field .input,
.ui.form .field.error .input {
  color: $ui_formErrorColor;
}

.ui.form .fields.error .field .corner.label,
.ui.form .field.error .corner.label {
  border-color: $ui_formErrorColor;
  color: $ui_white;
}

.ui.form .fields.error .field textarea,
.ui.form .fields.error .field select,
.ui.form .fields.error .field input:not([type]),
.ui.form .fields.error .field input[type="date"],
.ui.form .fields.error .field input[type="datetime-local"],
.ui.form .fields.error .field input[type="email"],
.ui.form .fields.error .field input[type="number"],
.ui.form .fields.error .field input[type="password"],
.ui.form .fields.error .field input[type="search"],
.ui.form .fields.error .field input[type="tel"],
.ui.form .fields.error .field input[type="time"],
.ui.form .fields.error .field input[type="text"],
.ui.form .fields.error .field input[type="file"],
.ui.form .fields.error .field input[type="url"],
.ui.form .field.error textarea,
.ui.form .field.error select,
.ui.form .field.error input:not([type]),
.ui.form .field.error input[type="date"],
.ui.form .field.error input[type="datetime-local"],
.ui.form .field.error input[type="email"],
.ui.form .field.error input[type="number"],
.ui.form .field.error input[type="password"],
.ui.form .field.error input[type="search"],
.ui.form .field.error input[type="tel"],
.ui.form .field.error input[type="time"],
.ui.form .field.error input[type="text"],
.ui.form .field.error input[type="file"],
.ui.form .field.error input[type="url"] {
  background: $ui_formErrorBackground;
  border-color: $ui_formErrorBorder;
  color: $ui_formErrorColor;
  border-radius: $ui_inputErrorBorderRadius;
  box-shadow: $ui_inputErrorBoxShadow;
}
.ui.form .field.error textarea:focus,
.ui.form .field.error select:focus,
.ui.form .field.error input:not([type]):focus,
.ui.form .field.error input[type="date"]:focus,
.ui.form .field.error input[type="datetime-local"]:focus,
.ui.form .field.error input[type="email"]:focus,
.ui.form .field.error input[type="number"]:focus,
.ui.form .field.error input[type="password"]:focus,
.ui.form .field.error input[type="search"]:focus,
.ui.form .field.error input[type="tel"]:focus,
.ui.form .field.error input[type="time"]:focus,
.ui.form .field.error input[type="text"]:focus,
.ui.form .field.error input[type="file"]:focus,
.ui.form .field.error input[type="url"]:focus {
  background: $ui_inputErrorFocusBackground;
  border-color: $ui_inputErrorFocusBorder;
  color: $ui_inputErrorFocusColor;

  -webkit-appearance: none;
  box-shadow: $ui_inputErrorFocusBoxShadow;
}

/* Preserve Native Select Stylings */
.ui.form .field.error select {
  -webkit-appearance: menulist-button;
}

/*------------------
    Dropdown Error
--------------------*/

.ui.form .fields.error .field .ui.dropdown,
.ui.form .fields.error .field .ui.dropdown .item,
.ui.form .field.error .ui.dropdown,
.ui.form .field.error .ui.dropdown .text,
.ui.form .field.error .ui.dropdown .item {
  background: $ui_formErrorBackground;
  color: $ui_formErrorColor;
}
.ui.form .fields.error .field .ui.dropdown,
.ui.form .field.error .ui.dropdown {
  border-color: $ui_formErrorBorder !important;
}
.ui.form .fields.error .field .ui.dropdown:hover,
.ui.form .field.error .ui.dropdown:hover {
  border-color: $ui_formErrorBorder !important;
}
.ui.form .fields.error .field .ui.dropdown:hover .menu,
.ui.form .field.error .ui.dropdown:hover .menu {
  border-color: $ui_formErrorBorder;
}
.ui.form .fields.error .field .ui.multiple.selection.dropdown > .label,
.ui.form .field.error .ui.multiple.selection.dropdown > .label {
  background-color: $ui_dropdownErrorLabelBackground;
  color: $ui_dropdownErrorLabelColor;
}

/* Hover */
.ui.form .fields.error .field .ui.dropdown .menu .item:hover,
.ui.form .field.error .ui.dropdown .menu .item:hover {
  background-color: $ui_dropdownErrorHoverBackground;
}

/* Selected */
.ui.form .fields.error .field .ui.dropdown .menu .selected.item,
.ui.form .field.error .ui.dropdown .menu .selected.item {
  background-color: $ui_dropdownErrorSelectedBackground;
}


/* Active */
.ui.form .fields.error .field .ui.dropdown .menu .active.item,
.ui.form .field.error .ui.dropdown .menu .active.item {
  background-color: $ui_dropdownErrorActiveBackground !important;
}

/*--------------------
    Checkbox Error
---------------------*/

.ui.form .fields.error .field .checkbox:not(.toggle):not(.slider) label,
.ui.form .field.error .checkbox:not(.toggle):not(.slider) label,
.ui.form .fields.error .field .checkbox:not(.toggle):not(.slider) .box,
.ui.form .field.error .checkbox:not(.toggle):not(.slider) .box {
  color: $ui_formErrorColor;
}
.ui.form .fields.error .field .checkbox:not(.toggle):not(.slider) label:before,
.ui.form .field.error .checkbox:not(.toggle):not(.slider) label:before,
.ui.form .fields.error .field .checkbox:not(.toggle):not(.slider) .box:before,
.ui.form .field.error .checkbox:not(.toggle):not(.slider) .box:before {
  background: $ui_formErrorBackground;
  border-color: $ui_formErrorBorder;
}
.ui.form .fields.error .field .checkbox label:after,
.ui.form .field.error .checkbox label:after,
.ui.form .fields.error .field .checkbox .box:after,
.ui.form .field.error .checkbox .box:after {
  color: $ui_formErrorColor;
}

/*--------------------
       Disabled
---------------------*/

.ui.form .disabled.fields .field,
.ui.form .disabled.field,
.ui.form .field :disabled {
  pointer-events: none;
  opacity: $ui_disabledOpacity;
}
.ui.form .field.disabled > label,
.ui.form .fields.disabled > label {
  opacity: $ui_disabledLabelOpacity;
}
.ui.form .field.disabled :disabled {
  opacity: 1;
}


/*--------------
    Loading
---------------*/

.ui.loading.form {
  position: relative;
  cursor: default;
  pointer-events: none;
}
.ui.loading.form:before {
  position: absolute;
  content: '';
  top: 0%;
  left: 0%;
  background: $ui_loaderDimmerColor;
  width: 100%;
  height: 100%;
  z-index: $ui_loaderDimmerZIndex;
}
.ui.loading.form:after {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;

  margin: $ui_loaderMargin;
  width: $ui_loaderSize;
  height: $ui_loaderSize;

  animation: form-spin $ui_loaderSpeed linear;
  animation-iteration-count: infinite;

  border-radius: $ui_circularRadius;

  border-color: $ui_loaderLineColor $ui_loaderFillColor $ui_loaderFillColor $ui_loaderFillColor;
  border-style: solid;
  border-width: $ui_loaderLineWidth;

  box-shadow: 0px 0px 0px 1px transparent;
  visibility: visible;
  z-index: $ui_loaderLineZIndex;
}

@keyframes form-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}


/*******************************
         Element Types
*******************************/

/*--------------------
     Required Field
---------------------*/

.ui.form .required.fields:not(.grouped) > .field > label:after,
.ui.form .required.fields.grouped > label:after,
.ui.form .required.field > label:after,
.ui.form .required.fields:not(.grouped) > .field > .checkbox:after,
.ui.form .required.field > .checkbox:after {
  margin: $ui_requiredMargin;
  content: $ui_requiredContent;
  color: $ui_requiredColor;
}

.ui.form .required.fields:not(.grouped) > .field > label:after,
.ui.form .required.fields.grouped > label:after,
.ui.form .required.field > label:after {
  display: inline-block;
  vertical-align: top;
}

.ui.form .required.fields:not(.grouped) > .field > .checkbox:after,
.ui.form .required.field > .checkbox:after {
  position: absolute;
  top: 0%;
  left: 100%;
}


/*******************************
           Variations
*******************************/


/*--------------------
    Inverted Colors
---------------------*/

.ui.inverted.form label,
.ui.form .inverted.segment label,
.ui.form .inverted.segment .ui.checkbox label,
.ui.form .inverted.segment .ui.checkbox .box,
.ui.inverted.form .ui.checkbox label,
.ui.inverted.form .ui.checkbox .box,
.ui.inverted.form .inline.fields > label,
.ui.inverted.form .inline.fields .field > label,
.ui.inverted.form .inline.fields .field > p,
.ui.inverted.form .inline.field > label,
.ui.inverted.form .inline.field > p {
  color: $ui_invertedLabelColor;
}

/* Inverted Field */
.ui.inverted.form input:not([type]),
.ui.inverted.form input[type="date"],
.ui.inverted.form input[type="datetime-local"],
.ui.inverted.form input[type="email"],
.ui.inverted.form input[type="number"],
.ui.inverted.form input[type="password"],
.ui.inverted.form input[type="search"],
.ui.inverted.form input[type="tel"],
.ui.inverted.form input[type="time"],
.ui.inverted.form input[type="text"],
.ui.inverted.form input[type="file"],
.ui.inverted.form input[type="url"] {
  background: $ui_invertedInputBackground;
  border-color: $ui_invertedInputBorderColor;
  color: $ui_invertedInputColor;
  box-shadow: $ui_invertedInputBoxShadow;
}


/*--------------------
     Field Groups
---------------------*/

/* Grouped Vertically */
.ui.form .grouped.fields {
  display: block;
  margin: $ui_groupedMargin;
}
.ui.form .grouped.fields:last-child {
  margin-bottom: 0em;
}

.ui.form .grouped.fields > label {
  margin: $ui_groupedLabelMargin;
  color: $ui_groupedLabelColor;
  font-size: $ui_groupedLabelFontSize;
  font-weight: $ui_groupedLabelFontWeight;
  text-transform: $ui_groupedLabelTextTransform;
}

.ui.form .grouped.fields .field,
.ui.form .grouped.inline.fields .field {
  display: block;
  margin: $ui_groupedFieldMargin;
  padding: 0em;
}

/*--------------------
        Fields
---------------------*/

/* Split fields */
.ui.form .fields {
  display: flex;
  flex-direction: row;
  margin: $ui_fieldsMargin;
}
.ui.form .fields > .field {
  flex: 0 1 auto;
  padding-left: ($ui_gutterWidth / 2);
  padding-right: ($ui_gutterWidth / 2);
}
.ui.form .fields > .field:first-child {
  border-left: none;
  box-shadow: none;
}

/* Other Combinations */
.ui.form .two.fields > .fields,
.ui.form .two.fields > .field {
  width: $ui_twoColumn;
}
.ui.form .three.fields > .fields,
.ui.form .three.fields > .field {
  width: $ui_threeColumn;
}
.ui.form .four.fields > .fields,
.ui.form .four.fields > .field {
  width: $ui_fourColumn;
}
.ui.form .five.fields > .fields,
.ui.form .five.fields > .field {
  width: $ui_fiveColumn;
}
.ui.form .six.fields > .fields,
.ui.form .six.fields > .field {
  width: $ui_sixColumn;
}
.ui.form .seven.fields > .fields,
.ui.form .seven.fields > .field {
  width: $ui_sevenColumn;
}
.ui.form .eight.fields > .fields,
.ui.form .eight.fields > .field {
  width: $ui_eightColumn;
}
.ui.form .nine.fields > .fields,
.ui.form .nine.fields > .field {
  width: $ui_nineColumn;
}
.ui.form .ten.fields > .fields,
.ui.form .ten.fields > .field {
  width: $ui_tenColumn;
}

/* Swap to full width on mobile */
@media only screen and (max-width : $ui_largestMobileScreen) {
  .ui.form .fields {
    flex-wrap: wrap;
  }

  .ui[class*="equal width"].form:not(.unstackable) .fields > .field,
  .ui.form:not(.unstackable) [class*="equal width"].fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .two.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .two.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .three.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .three.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .four.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .four.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .five.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .five.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .six.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .six.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .seven.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .seven.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .eight.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .eight.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .nine.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .nine.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .ten.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .ten.fields:not(.unstackable) > .field {
    width: $ui_oneColumn !important;
    margin: 0em 0em $ui_rowDistance;
  }
}


/* Sizing Combinations */
.ui.form .fields .wide.field {
  width: $ui_oneWide;
  padding-left: ($ui_gutterWidth / 2);
  padding-right: ($ui_gutterWidth / 2);
}

.ui.form .one.wide.field {
  width: $ui_oneWide !important;
}
.ui.form .two.wide.field {
  width: $ui_twoWide !important;
}
.ui.form .three.wide.field {
  width: $ui_threeWide !important;
}
.ui.form .four.wide.field {
  width: $ui_fourWide !important;
}
.ui.form .five.wide.field {
  width: $ui_fiveWide !important;
}
.ui.form .six.wide.field {
  width: $ui_sixWide !important;
}
.ui.form .seven.wide.field {
  width: $ui_sevenWide !important;
}
.ui.form .eight.wide.field {
  width: $ui_eightWide !important;
}
.ui.form .nine.wide.field {
  width: $ui_nineWide !important;
}
.ui.form .ten.wide.field {
  width: $ui_tenWide !important;
}
.ui.form .eleven.wide.field {
  width: $ui_elevenWide !important;
}
.ui.form .twelve.wide.field {
  width: $ui_twelveWide !important;
}
.ui.form .thirteen.wide.field {
  width: $ui_thirteenWide !important;
}
.ui.form .fourteen.wide.field {
  width: $ui_fourteenWide !important;
}
.ui.form .fifteen.wide.field {
  width: $ui_fifteenWide !important;
}
.ui.form .sixteen.wide.field {
  width: $ui_sixteenWide !important;
}

/* Swap to full width on mobile */
@media only screen and (max-width : $ui_largestMobileScreen) {
  .ui.form:not(.unstackable) .two.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .two.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .three.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .three.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .four.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .four.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .five.fields:not(.unstackable) > .fields,
  .ui.form:not(.unstackable) .five.fields:not(.unstackable) > .field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .two.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .three.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .four.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .five.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .six.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .seven.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .eight.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .nine.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .ten.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .eleven.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .twelve.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .thirteen.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .fourteen.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .fifteen.wide.field,
  .ui.form:not(.unstackable) .fields:not(.unstackable) > .sixteen.wide.field {
    width: $ui_oneColumn !important;
  }
  .ui.form .fields {
    margin-bottom: 0em;
  }
}

/*--------------------
     Equal Width
---------------------*/

.ui[class*="equal width"].form .fields > .field,
.ui.form [class*="equal width"].fields > .field {
  width: 100%;
  flex: 1 1 auto;
}

/*--------------------
    Inline Fields
---------------------*/

.ui.form .inline.fields {
  margin: $ui_fieldMargin;
  align-items: center;
}
.ui.form .inline.fields .field {
  margin: 0em;
  padding: $ui_inlineFieldsMargin;
}

/* Inline Label */
.ui.form .inline.fields > label,
.ui.form .inline.fields .field > label,
.ui.form .inline.fields .field > p,
.ui.form .inline.field > label,
.ui.form .inline.field > p {
  display: inline-block;
  width: auto;
  margin-top: 0em;
  margin-bottom: 0em;
  vertical-align: baseline;
  font-size: $ui_inlineLabelFontSize;
  font-weight: $ui_inlineLabelFontWeight;
  color: $ui_inlineLabelColor;
  text-transform: $ui_inlineLabelTextTransform;
}

/* Grouped Inline Label */
.ui.form .inline.fields > label {
  margin: $ui_groupedInlineLabelMargin;
}

/* Inline Input */
.ui.form .inline.fields .field > input,
.ui.form .inline.fields .field > select,
.ui.form .inline.field > input,
.ui.form .inline.field > select {
  display: inline-block;
  width: auto;

  margin-top: 0em;
  margin-bottom: 0em;

  vertical-align: middle;
  font-size: $ui_inlineInputSize;
}

/* Label */
.ui.form .inline.fields .field > :first-child,
.ui.form .inline.field > :first-child {
  margin: 0em $ui_inlineLabelDistance 0em 0em;
}
.ui.form .inline.fields .field > :only-child,
.ui.form .inline.field > :only-child {
  margin: 0em;
}

/* Wide */
.ui.form .inline.fields .wide.field {
  display: flex;
  align-items: center;
}
.ui.form .inline.fields .wide.field > input,
.ui.form .inline.fields .wide.field > select {
  width: 100%;
}


/*--------------------
        Sizes
---------------------*/

.ui.mini.form {
  font-size: $ui_mini;
}
.ui.tiny.form {
  font-size: $ui_tiny;
}
.ui.small.form {
  font-size: $ui_small;
}
.ui.form {
  font-size: $ui_medium;
}
.ui.large.form {
  font-size: $ui_large;
}
.ui.big.form {
  font-size: $ui_big;
}
.ui.huge.form {
  font-size: $ui_huge;
}
.ui.massive.form {
  font-size: $ui_massive;
}

loadUIOverrides();

